{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","js/services/api.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSlice.js","redux/contacts/contactsReducer.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","onChangeHandler","e","target","value","preventDefault","className","s","form","label","type","pattern","title","onChange","input","required","button","ContactList","filterContacts","onDeleteContacts","list","map","contact","item","text","onClick","id","Filter","wrapper","BASE_URL","process","fetchData","path","a","options","fetch","res","ok","json","Promise","reject","Error","statusText","API_ENDPOINT","getContacts","createAsyncThunk","addContact","newContact","endpoint","finalOptions","method","body","JSON","stringify","headers","api","deleteContact","contactsSlice","createSlice","initialState","items","filter","reducers","changeFilter","state","payload","extraReducers","builder","addCase","fulfilled","push","idx","findIndex","splice","actions","setContacts","addContacts","deleteContacts","createAction","itemsReducer","createReducer","_","city","filterReducer","combineReducers","contactsOperations","App","contacts","useSelector","dispatch","useDispatch","console","log","useEffect","section","contactToAdd","nanoid","some","toLowerCase","alert","normalizedFilter","includes","flterContacts","store","configureStore","reducer","contactReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71cae81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2r0Hy\",\"item\":\"ContactList_item__2Z0Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3sBPv\",\"label\":\"Filter_label__2scY9\",\"input\":\"Filter_input__E8_Cg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__2edOD\",\"title\":\"App_title__dU9LD\"};","import React from 'react'\r\nimport { useState } from 'react';\r\nimport s from './ContactForm.module.css'\r\n\r\nconst ContactForm = ({onSubmit}) => {\r\n\r\n  const [name, setName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n\r\n  const onChangeHandler = e => {\r\n    const { name, value } = e.target;\r\n    \r\n    switch (name) {\r\n      case \"name\":\r\n        setName( value );\r\n        break;\r\n    \r\n      case \"number\":\r\n        setNumber( value );\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n    \r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n    return (\r\n      <form onSubmit={submitHandler} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input  \r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            onChange={onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input        \r\n            name=\"number\"\r\n            type=\"tel\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            onChange={onChangeHandler}\r\n            className={s.input}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}> Add contact</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\n\r\nexport const ContactList = ({ filterContacts, onDeleteContacts }) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {filterContacts.map(contact => (\r\n                <li key={contact.id} className={s.item}>\r\n                    <p className={s.text}>{contact.name}: {contact.number} </p>\r\n                    <button type=\"button\" onClick={() => onDeleteContacts(contact.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContacts: PropTypes.array,\r\n  onDeleteContacts: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <div className={s.wrapper}>\r\n    <label className={s.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className={s.input}\r\n    ></input>\r\n  </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","const BASE_URL = process.env.REACT_APP_API_KEY;\r\n\r\nconst fetchData = async (path, options = {}) => {\r\n  const res = await fetch(`${BASE_URL}/${path}`, options);\r\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\r\n};\r\n\r\nconst getData = (endpoint, options) => fetchData(endpoint, options);\r\n\r\nconst saveItem = (endpoint, item, options = {}) => {\r\n  const finalOptions = {\r\n    method: 'POST',\r\n    // body: item,\r\n    body: JSON.stringify(item),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n    ...options,\r\n  };\r\n  return fetchData(endpoint, finalOptions);\r\n};\r\n\r\nconst deleteItem = (endpoint, id, options = {}) =>\r\n  fetchData(`${endpoint}/${id}`, { method: 'DELETE', ...options });\r\n\r\nexport { getData, saveItem, deleteItem };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as api from '../../js/services/api';\r\n\r\nconst API_ENDPOINT = 'contacts';\r\n\r\nconst getContacts = createAsyncThunk('contacts/getContactsStatus', () =>\r\n  api.getData(API_ENDPOINT),\r\n);\r\n\r\nconst addContact = createAsyncThunk('contacts/addContactStatus', newContact =>\r\n  api.saveItem(API_ENDPOINT, newContact),\r\n);\r\n\r\nconst deleteContact = createAsyncThunk('contacts/deleteContactStatus', id =>\r\n  api.deleteItem(API_ENDPOINT, id),\r\n);\r\n\r\nexport { getContacts, addContact, deleteContact };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { getContacts, addContact, deleteContact } from './contactsOperations';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: '',\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    changeFilter: (state, { payload }) => {\r\n      state.filter = payload;\r\n    },\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getContacts.fulfilled, (state, { payload }) => {\r\n        state.items = payload;\r\n      })\r\n\r\n      .addCase(addContact.fulfilled, (state, { payload }) => {\r\n        state.items.push(payload);\r\n      })\r\n\r\n      .addCase(deleteContact.fulfilled, (state, { payload }) => {\r\n        const idx = state.items.findIndex(contact => contact.id === payload.id);\r\n        state.items.splice(idx, 1);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setContacts, addContacts, deleteContacts, filterContacts } =\r\n  contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;\r\n","import { createReducer, createAction, combineReducers } from '@reduxjs/toolkit';\r\nimport { getContacts, addContact, deleteContact } from './contactsOperations';\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst itemsReducer = createReducer([], builder => {\r\n  builder\r\n    .addCase(getContacts.fulfilled, (_, { payload }) => payload)\r\n    .addCase(addContact.fulfilled, (state, { payload }) => [...state, payload])\r\n    .addCase(deleteContact.fulfilled, (state, { payload }) =>\r\n      state.filter(city => city.id !== payload.id),\r\n    );\r\n});\r\n\r\nconst filterReducer = createReducer('', builder => {\r\n  builder.addCase(changeFilter, (_, { payload }) => payload);\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport { changeFilter };\r\n\r\nexport default contactsReducer;\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Filter } from './components/Filter/Filter';\nimport { contactsOperations } from './redux/contacts';\nimport s from './App.module.css';\nimport { changeFilter } from './redux/contacts/contactsReducer';\n\nconst { getContacts, addContact, deleteContact } = contactsOperations;\n\nconst App = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const submitHandler = ({ name, number }) => {\n    const contactToAdd = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === contactToAdd.name.toLowerCase(),\n      )\n    ) {\n      return alert(`${contactToAdd.name} is already in contacts!`);\n    } else {\n      dispatch(addContact(contactToAdd));\n    }\n  };\n\n  const flterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\n\n  const removeContact = id => dispatch(deleteContact(id));\n\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={submitHandler} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter onChange={onChangeFilter} value={filter} />\n      <ContactList\n        filterContacts={flterContacts()}\n        onDeleteContacts={removeContact}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contacts/contactsSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1yt4n\",\"label\":\"ContactForm_label__3Cjah\",\"input\":\"ContactForm_input__1donc\",\"button\":\"ContactForm_button__1RyRo\"};"],"sourceRoot":""}